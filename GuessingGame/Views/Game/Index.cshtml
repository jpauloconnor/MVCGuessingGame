@model GuessingGame.Models.GameModel

@{
    ViewBag.Title = "Guessing Game";
}
<h2>Index</h2>

<!--
    This will layout the form. Knows about our route. 
    Knows we'll be at Game/Index. 
    Can wire up the action properly for us. 
    Notice the return type is an MVC form.
    @@using only works with class
    By putting it in the using, you automatically call EndForm with it.
-->
@if (!(ViewBag.Win ?? false))
{
    if (ViewBag.Win != null && !ViewBag.Win)
    {
        <h2>Sorry, @Model.PlayerName, @Model.Guess is incorrect :(</h2>
    }

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(
                false,
                "",
                new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(
                        m => m.PlayerName,
                        htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(
                                m => m.PlayerName,

                                new { htmlAttributes = new { @class = "form-control" } })


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(
                        m => m.Guess,
                        htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(
                            m => m.Guess,
                            new { HtmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guess" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
else
{
    <h1>That's it, @Model.PlayerName The answer was @Model.Guess</h1>
}

<div>
    @Html.ActionLink("Start Over", "Index")
</div>
